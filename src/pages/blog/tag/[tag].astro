---
import { getCollection } from "astro:content";
import Posts from "@components/blog/posts.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Layout from "@layouts/Layout.astro";
import { t } from "i18next";

export async function getStaticPaths() {
  try {
    const posts = await getCollection("blog", ({ data }) => 
      !data.draft && data.publishDate < new Date()
    );
    
    const languages = ["en", "it", "fr", "de", "es", "hi", "ar", "id", "ru", "pt", "ko", "tl", "nl", "ms", "tr"];
    const paths = [];

    for (const lang of languages) {
      const langPosts = posts.filter(post => post.slug.startsWith(`${lang}/`));
      const tags = new Set();
      
      for (const post of langPosts) {
        if (post.data.tags) {
          post.data.tags.forEach(tag => tags.add(tag.toLowerCase()));
        }
      }

      for (const tag of Array.from(tags)) {
        paths.push({
          params: { tag, lang },
          props: {
            posts: langPosts.filter(post => 
              post.data.tags?.some(t => t.toLowerCase() === tag)
            ),
            tag,
            lang
          }
        });
      }
    }

    return paths;
  } catch (error) {
    console.error("Error in getStaticPaths:", error);
    return [];
  }
}

const { posts = [], tag, lang } = Astro.props;
if (!tag) return new Response(null, { status: 404 });
---

<Layout 
  title={`${t("mics.tag_title1")} ${tag} ${t("mics.tag_title2")}`} 
  lang={lang}
>
  <Container>
    <Sectionhead>
      <Fragment slot="title">
        {`${t("mics.tag_title1")} ${tag} ${t("mics.tag_title2")}`}
      </Fragment>
      <Fragment slot="desc">
        {`${t("mics.tag_desc")} ${tag} ${t("mics.tag_desc2")}`}
      </Fragment>
    </Sectionhead>
    <Posts posts={posts} />
  </Container>
</Layout>